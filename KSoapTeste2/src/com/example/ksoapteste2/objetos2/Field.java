package com.example.ksoapteste2.objetos2;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 6/11/2014 4:40:07 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Field implements KvmSerializable {
    
    public String campo;
    public String grupo;
    public String indice;
    public String textoExibicao;
    public String valor;
    
    public Field(){}
    
    public Field(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Campo"))
        {
            Object obj = soapObject.getProperty("Campo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                campo = j.toString();
            }else if (obj!= null && obj instanceof String){
                campo = (String) obj;
            }
        }
        if (soapObject.hasProperty("Grupo"))
        {
            Object obj = soapObject.getProperty("Grupo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                grupo = j.toString();
            }else if (obj!= null && obj instanceof String){
                grupo = (String) obj;
            }
        }
        if (soapObject.hasProperty("Indice"))
        {
            Object obj = soapObject.getProperty("Indice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                indice = j.toString();
            }else if (obj!= null && obj instanceof String){
                indice = (String) obj;
            }
        }
        if (soapObject.hasProperty("TextoExibicao"))
        {
            Object obj = soapObject.getProperty("TextoExibicao");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                textoExibicao = j.toString();
            }else if (obj!= null && obj instanceof String){
                textoExibicao = (String) obj;
            }
        }
        if (soapObject.hasProperty("Valor"))
        {
            Object obj = soapObject.getProperty("Valor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                valor = j.toString();
            }else if (obj!= null && obj instanceof String){
                valor = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return campo;
            case 1:
                return grupo;
            case 2:
                return indice;
            case 3:
                return textoExibicao;
            case 4:
                return valor;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 5;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Campo";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Grupo";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Indice";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TextoExibicao";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Valor";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
