package com.example.ksoapteste2.objetos2;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 6/11/2014 4:40:07 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import java.util.List;

import org.ksoap2.HeaderProperty;
import org.ksoap2.SoapEnvelope;
import org.ksoap2.SoapFault;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;

import android.os.AsyncTask;

import com.example.ksoapteste2.objetos2.WS_Enums.SoapProtocolVersion;

public class Service2 {
    
    public String NAMESPACE ="http://tempuri.org/";
    public String url="";
    public int timeOut = 60000;
    public IWsdl2CodeEvents eventHandler;
    public SoapProtocolVersion soapVersion;
    
    public Service2(){}
    
    public Service2(IWsdl2CodeEvents eventHandler)
    {
        this.eventHandler = eventHandler;
    }
    public Service2(IWsdl2CodeEvents eventHandler,String url)
    {
        this.eventHandler = eventHandler;
        this.url = url;
    }
    public Service2(IWsdl2CodeEvents eventHandler,String url,int timeOutInSeconds)
    {
        this.eventHandler = eventHandler;
        this.url = url;
        this.setTimeOut(timeOutInSeconds);
    }
    public void setTimeOut(int seconds){
        this.timeOut = seconds * 1000;
    }
    public void setUrl(String url){
        this.url = url;
    }
    public void ConsultarDoctoAsync(Field ctConsultaIN) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        ConsultarDoctoAsync(ctConsultaIN, null);
    }
    
    public void ConsultarDoctoAsync(final Field ctConsultaIN,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, ConsultaDoctoOUT>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected ConsultaDoctoOUT doInBackground(Void... params) {
                return ConsultarDocto(ctConsultaIN, headers);
            }
            @Override
            protected void onPostExecute(ConsultaDoctoOUT result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("ConsultarDocto", result);
                }
            }
        }.execute();
    }
    
    public ConsultaDoctoOUT ConsultarDocto(Field ctConsultaIN){
        return ConsultarDocto(ctConsultaIN, null);
    }
    
    public ConsultaDoctoOUT ConsultarDocto(Field ctConsultaIN,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","ConsultarDocto");
        soapEnvelope.addMapping("http://tempuri.org/","ctConsultaIN",new Field().getClass());
        soapReq.addProperty("ctConsultaIN",ctConsultaIN);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IService/ConsultarDocto", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IService/ConsultarDocto", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    ConsultaDoctoOUT resultVariable =  new ConsultaDoctoOUT (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void ConsultarTrackingCabecAsync(Field consultaTrackingCabecIN) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        ConsultarTrackingCabecAsync(consultaTrackingCabecIN, null);
    }
    
    public void ConsultarTrackingCabecAsync(final Field consultaTrackingCabecIN,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, ConsultaTrackingCabecOUT>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected ConsultaTrackingCabecOUT doInBackground(Void... params) {
                return ConsultarTrackingCabec(consultaTrackingCabecIN, headers);
            }
            @Override
            protected void onPostExecute(ConsultaTrackingCabecOUT result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("ConsultarTrackingCabec", result);
                }
            }
        }.execute();
    }
    
    public ConsultaTrackingCabecOUT ConsultarTrackingCabec(Field consultaTrackingCabecIN){
        return ConsultarTrackingCabec(consultaTrackingCabecIN, null);
    }
    
    public ConsultaTrackingCabecOUT ConsultarTrackingCabec(Field consultaTrackingCabecIN,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","ConsultarTrackingCabec");
        soapEnvelope.addMapping("http://tempuri.org/","consultaTrackingCabecIN",new Field().getClass());
        soapReq.addProperty("consultaTrackingCabecIN",consultaTrackingCabecIN);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IService/ConsultarTrackingCabec", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IService/ConsultarTrackingCabec", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    ConsultaTrackingCabecOUT resultVariable =  new ConsultaTrackingCabecOUT (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void ConsultarTrackingAsync(Field consultaTrackingIN) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        ConsultarTrackingAsync(consultaTrackingIN, null);
    }
    
    public void ConsultarTrackingAsync(final Field consultaTrackingIN,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, ConsultaTrackingOUT>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected ConsultaTrackingOUT doInBackground(Void... params) {
                return ConsultarTracking(consultaTrackingIN, headers);
            }
            @Override
            protected void onPostExecute(ConsultaTrackingOUT result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("ConsultarTracking", result);
                }
            }
        }.execute();
    }
    
    public ConsultaTrackingOUT ConsultarTracking(Field consultaTrackingIN){
        return ConsultarTracking(consultaTrackingIN, null);
    }
    
    public ConsultaTrackingOUT ConsultarTracking(Field consultaTrackingIN,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        
        SoapObject soapReq = new SoapObject("http://tempuri.org/","ConsultarTracking");
        soapEnvelope.addMapping("http://tempuri.org/","consultaTrackingIN",new Field().getClass());
        soapReq.addProperty("consultaTrackingIN",consultaTrackingIN);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        httpTransport.debug=true;//TESTE
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IService/ConsultarTracking", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IService/ConsultarTracking", soapEnvelope);
            }
            
            System.out.println("REQUEST DUMP: "+httpTransport.requestDump);
            System.out.println("RESPONSE DUMP: "+httpTransport.responseDump);
            
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    ConsultaTrackingOUT resultVariable =  new ConsultaTrackingOUT (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void CadastrarTrackingAsync(Field cadastroTrackingIN) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        CadastrarTrackingAsync(cadastroTrackingIN, null);
    }
    
    public void CadastrarTrackingAsync(final Field cadastroTrackingIN,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, CadastroTrackingOUT>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected CadastroTrackingOUT doInBackground(Void... params) {
                return CadastrarTracking(cadastroTrackingIN, headers);
            }
            @Override
            protected void onPostExecute(CadastroTrackingOUT result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("CadastrarTracking", result);
                }
            }
        }.execute();
    }
    
    public CadastroTrackingOUT CadastrarTracking(Field cadastroTrackingIN){
        return CadastrarTracking(cadastroTrackingIN, null);
    }
    
    public CadastroTrackingOUT CadastrarTracking(Field cadastroTrackingIN,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","CadastrarTracking");
        soapEnvelope.addMapping("http://tempuri.org/","cadastroTrackingIN",new Field().getClass());
        soapReq.addProperty("cadastroTrackingIN",cadastroTrackingIN);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IService/CadastrarTracking", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IService/CadastrarTracking", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    CadastroTrackingOUT resultVariable =  new CadastroTrackingOUT (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
}
